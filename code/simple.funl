let identity
	fun (x) x;

let true
	fun (x y) x;
	
let false
	fun (x y) y;
	
let if
	fun (b t e)
		(b t e);
		
let and
	fun (b1 b2)
		(if b1 b2 false);
	
let or
	fun (b1 b2)
		(if b1 true b2);
		
let not
	fun (b)
		(if b false true);
	
	
	

let cons
	fun (x y f)
		(f x y);
		
let fst
	fun (c)
		(c true);
		
let snd
	fun (c)
		(c false);
		
		
		
let []
	fun (x) true;
	
	
let isempty?
	fun (l)
		(l (fun (x y) false));
	
	

let head fst;


let tail 
	fun (l)
		(if (isempty? l)
			[]
			(snd l)
		);
			


let empty
	[] 
in
let one-element
	(cons true empty)
in
let two-elements
	(cons identity one-element)
in
let l
	(cons true two-elements)
in
	(head (tail l)) 
	